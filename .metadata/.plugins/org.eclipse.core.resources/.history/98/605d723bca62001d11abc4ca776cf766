package excelDriven.excelDataProvider;


import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;

import org.apache.poi.ss.usermodel.DataFormatter;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

public class dataProvider {

	//mutilple sets of data to our tests
	//arraypublic
	//5 sets of data as 5 arrays from data provider to your tests
	//then tests will run 5 times with 5 sets of data(array) each
	
	DataFormatter formatter = new DataFormatter();
	
	@Test(dataProvider="getData")
	public void testCaseData(String greeting, String communication, String id) {
		System.out.println(greeting+" "+communication+" "+id);
		
		
	}
		
	@DataProvider
	public Object[][] getData() throws IOException {
		//Object[][] data = {{"hello","text",1},{"bye","message",123},{"hey","call",876}};
		//every row of excel should be sent as 1 array
		FileInputStream fis = new FileInputStream("C://work//excelDriven.xlsx");
		XSSFWorkbook wb = new XSSFWorkbook(fis);
		XSSFSheet sheet = wb.getSheetAt(0);                //this will grab the first sheet in excel file
		int rowCount = sheet.getPhysicalNumberOfRows();    //this will get the count of all the rows in the selected sheet
		XSSFRow row = sheet.getRow(0); 					   //this will fetch the first row in the sheet
		int colCount = row.getLastCellNum();
		Object[][] data = new Object[rowCount-1][colCount];   //rowCount-1 is taken since we don't want to include the first header row count
		for(int i = 0; i < rowCount-1; i++) {
			row = sheet.getRow(i+1);                        //getRow(i+1) is used to avoid getting the header row names of the first row 
			for(int j = 0; j < colCount; j++) {
				XSSFCell cell = row.getCell(j);
				data[i][j] = formatter.formatCellValue(cell); //formatCellValue will convert the cell value to String no matter what the value is initially
			}
		}
		
		return data;
	}
}
